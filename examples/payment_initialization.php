<?php
/**
 * file Простой пример инициализации оплаты.
 * Управление должно передаваться с пользовательской формы выбора провайдера оплаты в корзине.
 * РОБОКАССА выполняет редирект на URL, указываемый в настройках аккаунта.
 *
 * Кроме этого ресурса длжны присутствовать ещё 3:
 * # ResultURL — адрес скрипта, который примет от Робокассы уведомление о платеже.
 * # SuccessURL — сюда будет перенаправлен пользователь, ПОСЛЕ ПОДТВЕРЖДЕНИЯ ОПЛАТЫ.
 * # FailURL — сюда будет перенаправлен пользователь ПРИ ОТКАЗЕ ОТ ОПЛАТЫ.
 */

/*
 * Существует 3 схемы построения приложения магазина.
 *
 * 2-я схема: Магазин, формирующий уникальный номер счета, но без формирования запросов
 *
 * Схема работы магазина следующая:
 *
 * 1. Скрипт магазина сформировав уникальный номер счета и сформировав подпись направляет пользователя на оплату.
 * 2. После оплаты, ROBOKASSA уведомляет магазин о том, что платеж совершен, вызывая скрипт, находящийся по адресу
 *    ResultURL - скрипту передаются параметры платежа, подписанные ROBOKASSA с использованием пароля#2.
 *    Скрипт указанному заказу устанавливает в БД магазина состояние "оплачено".
 *    Примечание: Если в момент оповещение между ROBOKASSA и магазином отсутствует связь - администратору магазина отправляется email-сообщение.
 * 3. После оплаты, и после сообщения магазину по адресу ResultURL, пользователь перенаправляется по скрипту,
 *    находящемуся по адресу SuccessURL - скрипту передаются те же параметры, но подписанные с использованием пароля#1.
 *    Скрипт анализирует данные, сверяет их с данными, ранее полученными скриптом ResultURL
 */

const IS_DEBUG_MODE = true;

//
// Формирование параметров и редирект пользователя в панель подтверждения оплаты РОБОКАССЫ.
// Метод requestPayment отсутствует, оплата производится в один шаг
(new Robokassa('merchant_login', 'pass1', 'pass2', IS_DEBUG_MODE))->processPayment([
        //
        // float - требуемая к получению сумма (обязательный параметр).
        // Формат представления числа - разделитель точка.
        // Сумма должна быть указана в той валюте, которая была указана при регистрации магазина,
        // как валюта текущего баланса Продавца или как электронная валюта, в которой будет получать средства Продавец.
        'OutSum' => 500,
        //
        // string - Email пользователя. Пользователь может изменить его в процессе оплаты.
        'Email' => false,
        //
        // integer - Идентификатор транзакции в приложении (в магазине). Должен быть уникальным для магазина.
        // Может принимать значения от 1 до 2147483647 (2^31-1).
        // Если содержит пустое значение, вовсе не указан, либо равен "0", то при создании операции ей будет автоматически присвоен уникальный номер счета.
        // Рекомендуется использовать данную возможность только в очень простых магазинах, где не требуется какого-либо контроля.
        'InvId' => 0,
        //
        // string - Описание покупки.
        // можно использовать только символы английского или русского алфавита, цифры и знаки препинания.
        // Максимальная длина 100 символов.
        'InvDesc' => 'Тестовая оплата',
        //
        // string[] - Коллекция дополнительных параметров приложения (магазина),
        // необрабатываемых сервисов ROBOKASSA, но пересылаемых на этап верификации платежа.
        'CustomValues' => [
            'user'     => $userId,
            'someData' => 'someValue'
        ]
    ]);